{"version":3,"sources":["webpack:///./index.js"],"names":["refs","list_toDo","document","querySelector","addTaskButton","addTaskLittleButton","scope","active","successful","addEventListener","addTask","e","itemId_toDelete","target","offsetParent","id","dataset","action","listAfterDel","JSON","parse","localStorage","getItem","filter","slice","setItem","stringify","renderList","itemId_toChange","classList","add","tasksList","itemToChange","find","index","indexOf","texterea","children","value","disabled","description","changedList","name","itemId_toChecked","checkedItem","checked","checkedList","tasksStorage","tasks","innerHTML","listTasks","map","date","checkTrue","insertAdjacentHTML","join","tasksSum","length","successfulTasks","textContent","Date","toLocaleDateString","year","month","day","random_id","Math","floor","random","listFromStorage","task","list","push"],"mappings":"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","file":"main.3b83b0d85d9c8a98a931.js","sourcesContent":["import './styles.css';\r\n\r\nconst refs = {\r\n  list_toDo: document.querySelector('.list_toDo'),\r\n  addTaskButton: document.querySelector('#addButton'),\r\n  addTaskLittleButton: document.querySelector('#addButtonLittle'),\r\n  scope: document.querySelector('#scope'),\r\n  active: document.querySelector('#active'),\r\n  successful: document.querySelector('#successful'),\r\n};\r\n\r\nrefs.addTaskButton.addEventListener('click', addTask);\r\nrefs.addTaskLittleButton.addEventListener('click', addTask);\r\nrefs.list_toDo.addEventListener('click', deleteTask);\r\nrefs.list_toDo.addEventListener('click', changeTask);\r\nrefs.list_toDo.addEventListener('click', checkedListen);\r\n\r\nconst tasksStorage = JSON.parse(localStorage.getItem('tasks'));\r\nif (tasksStorage === null) {\r\n  refs.list_toDo.insertAdjacentHTML(\r\n    'beforeend',\r\n    '<div>You have not any task</div>',\r\n  );\r\n} else {\r\n  renderList(tasksStorage);\r\n}\r\n\r\nfunction renderList(tasks) {\r\n  refs.list_toDo.innerHTML = '';\r\n  const listTasks = tasks.map(({ date, description, id, checked }) => {\r\n    const checkTrue = checked ? 'checked' : '';\r\n\r\n    return `\r\n    <li class=\"list_toDo_item\" id=item_${id}>\r\n        <div class=\"menu_info\">\r\n            <div class=\"date_check\">\r\n                <input class=\"inputCheck\" ${checkTrue} type=\"checkbox\" name=\"successful\" }>\r\n                <div class=\"dateNow\">${date}</div>\r\n            </div>\r\n            <div class=\"button_menu\">\r\n                <button class=\"change__button\" data-action=\"change_descr\"></button>\r\n                <button class=\"delete__button\" data-action=\"delete_task\"></button>\r\n            </div>\r\n        </div>\r\n            <textarea name=\"descriptions\" \r\n             class=\"toDo__text ${checkTrue}\"\r\n             id=\"text_desxr\" \r\n             cols=\"350\" \r\n             rows=\"1\"\r\n             wrap=\"soft\"\r\n             maxlength=\"100\"\r\n             disabled\r\n             placeholder=\"Please enter your descriptions\">${description}</textarea>\r\n      \r\n        \r\n    </li>`;\r\n  });\r\n\r\n  refs.list_toDo.insertAdjacentHTML('beforeend', listTasks.join(''));\r\n  const tasksSum = tasks.length;\r\n  const successfulTasks = tasks.filter(({ checked }) => checked).length;\r\n\r\n  refs.scope.textContent = tasksSum;\r\n  refs.successful.textContent = successfulTasks;\r\n  refs.active.textContent = tasksSum - successfulTasks;\r\n}\r\n\r\nfunction addTask() {\r\n  const date = new Date().toLocaleDateString('en-GB', {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n  });\r\n\r\n  const random_id = Math.floor(Math.random() * 1000);\r\n  const listFromStorage = JSON.parse(localStorage.getItem('tasks'));\r\n\r\n  const unicId = listFromStorage\r\n    ? listFromStorage.find(({ id }) => random_id === id)\r\n    : 1;\r\n\r\n  const id = unicId ? random_id + 10 : random_id;\r\n\r\n  let description = '';\r\n  const checked = false;\r\n  const task = { date, id, checked, description };\r\n\r\n  let list = [];\r\n  if (localStorage.getItem('tasks') === null) {\r\n    list.push(task);\r\n  } else {\r\n    list = listFromStorage;\r\n    list.push(task);\r\n  }\r\n\r\n  localStorage.setItem('tasks', JSON.stringify(list));\r\n  renderList(list);\r\n}\r\n\r\nfunction changeTask(e) {\r\n  const itemId_toChange = e.target.offsetParent.id;\r\n\r\n  if (e.target.dataset.action === 'change_descr') {\r\n    e.target.classList.add('button_ok');\r\n    const tasksList = JSON.parse(localStorage.getItem('tasks'));\r\n\r\n    const itemToChange = tasksList.find(\r\n      ({ id }) => id === +itemId_toChange.slice(5),\r\n    );\r\n    const index = tasksList.indexOf(itemToChange);\r\n    const texterea = e.target.offsetParent.children[1];\r\n    let value = texterea.value;\r\n\r\n    if (texterea.disabled === true) {\r\n      texterea.disabled = false;\r\n    } else if (texterea.disabled === false) {\r\n      itemToChange.description = value;\r\n      const changedList = [...tasksList];\r\n      changedList[index] = itemToChange;\r\n      localStorage.setItem('tasks', JSON.stringify(changedList));\r\n      renderList(changedList);\r\n      texterea.disabled === true;\r\n    }\r\n  }\r\n}\r\n\r\nfunction checkedListen(e) {\r\n  if (e.target.name === 'successful') {\r\n    const itemId_toChecked = e.target.offsetParent.id;\r\n    const tasksList = JSON.parse(localStorage.getItem('tasks'));\r\n    const checkedItem = tasksList.find(\r\n      ({ id }) => id === +itemId_toChecked.slice(5),\r\n    );\r\n    const index = tasksList.indexOf(checkedItem);\r\n    checkedItem.checked = e.target.checked;\r\n    const checkedList = [...tasksList];\r\n    checkedList[index] = checkedItem;\r\n\r\n    localStorage.setItem('tasks', JSON.stringify(checkedList));\r\n    renderList(checkedList);\r\n  }\r\n}\r\n\r\nfunction deleteTask(e) {\r\n  const itemId_toDelete = e.target.offsetParent.id;\r\n\r\n  if (e.target.dataset.action === 'delete_task') {\r\n    const listAfterDel = JSON.parse(localStorage.getItem('tasks')).filter(\r\n      ({ id }) => id !== +itemId_toDelete.slice(5),\r\n    );\r\n    localStorage.setItem('tasks', JSON.stringify(listAfterDel));\r\n    renderList(listAfterDel);\r\n  }\r\n}\r\n\r\n// fetch('https://jsonplaceholder.typicode.com/posts')\r\n//   .then(response => response.json())\r\n//   .then(json => console.log(json));\r\n"],"sourceRoot":""}